server:
  port: 8222  # Porta del Gateway

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/utenti #utenti, posizione lavorativa e dipartimento
    username: pippo
    password: pluto
  jpa:
    hibernate:
      ddl-auto: update
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # Abilita la discovery locator
          lower-case-service-id: true  # Converti gli id dei servizi in minuscolo
      routes:
        - id: utente-route
          uri: lb://utente-service # Usa Eureka per risolvere l'URL
          predicates:
            - Path=/app/v1/utenti/**

        - id: dipartimento-route
          uri: lb://utente-service  # Usa Eureka per risolvere l'URL
          predicates:
            - Path=/app/v1/dipartimento/**

        - id: posizioneLavorativa-route
          uri: lb://utente-service # Usa Eureka per risolvere l'URL
          predicates:
            - Path=/app/v1/posizioneLavorativa/**

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/  # Assicurati che questa URL sia corretta
    register-with-eureka: false   # Se non vuoi che il Gateway si registri su Eureka
    fetch-registry: true         # Abilita il recupero del registro da Eureka

logging:
  level:
    com.netflix.discovery: DEBUG  # Log per il client Eureka
    org.springframework.cloud.gateway: TRACE
    org.springframework.web: DEBUG  # Log per le richieste HTTP

management:
  endpoints:
    web:
      exposure:
        include: "*"  # Espone tutti gli endpoint Actuator
  endpoint:
    gateway:
      enabled: true  # Abilita gli endpoint Actuator per il gateway

jwt:
  secret: "GbOGC6XP6uhqfNUzDIYeqqwO34Ne1EuMOrtsiatc0wo="